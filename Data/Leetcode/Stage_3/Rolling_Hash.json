[
  {
    "questionFrontendId": "214",
    "title": "Shortest Palindrome",
    "titleSlug": "shortest-palindrome",
    "difficulty": "Hard",
    "acRate": 40.99818240573864,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Longest Palindromic Substring",
        "titleSlug": "longest-palindromic-substring",
        "difficulty": "Medium"
      },
      {
        "title": "Find the Index of the First Occurrence in a String",
        "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
        "difficulty": "Easy"
      },
      {
        "title": "Palindrome Pairs",
        "titleSlug": "palindrome-pairs",
        "difficulty": "Hard"
      },
      {
        "title": "Maximum Deletions on a String",
        "titleSlug": "maximum-deletions-on-a-string",
        "difficulty": "Hard"
      },
      {
        "title": "Smallest Palindromic Rearrangement I",
        "titleSlug": "smallest-palindromic-rearrangement-i",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Accenture",
        "frequency": 68.9
      },
      {
        "name": "eBay",
        "frequency": 52.5
      },
      {
        "name": "Google",
        "frequency": 38.0
      },
      {
        "name": "Pocket Gems",
        "frequency": 100.0
      },
      {
        "name": "Visa",
        "frequency": 52.5
      }
    ]
  },
  {
    "questionFrontendId": "718",
    "title": "Maximum Length of Repeated Subarray",
    "titleSlug": "maximum-length-of-repeated-subarray",
    "difficulty": "Medium",
    "acRate": 51.08058863918059,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Minimum Size Subarray Sum",
        "titleSlug": "minimum-size-subarray-sum",
        "difficulty": "Medium"
      },
      {
        "title": "Longest Common Subpath",
        "titleSlug": "longest-common-subpath",
        "difficulty": "Hard"
      },
      {
        "title": "Find the Maximum Length of a Good Subsequence II",
        "titleSlug": "find-the-maximum-length-of-a-good-subsequence-ii",
        "difficulty": "Hard"
      },
      {
        "title": "Find the Maximum Length of a Good Subsequence I",
        "titleSlug": "find-the-maximum-length-of-a-good-subsequence-i",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Citadel",
        "frequency": 74.4
      }
    ]
  },
  {
    "questionFrontendId": "1147",
    "title": "Longest Chunked Palindrome Decomposition",
    "titleSlug": "longest-chunked-palindrome-decomposition",
    "difficulty": "Hard",
    "acRate": 58.90610461588251,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "slug": "greedy"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Palindrome Rearrangement Queries",
        "titleSlug": "palindrome-rearrangement-queries",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "1316",
    "title": "Distinct Echo Substrings",
    "titleSlug": "distinct-echo-substrings",
    "difficulty": "Hard",
    "acRate": 52.28874583343936,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Find Substring With Given Hash Value",
        "titleSlug": "find-substring-with-given-hash-value",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "1392",
    "title": "Longest Happy Prefix",
    "titleSlug": "longest-happy-prefix",
    "difficulty": "Hard",
    "acRate": 49.765208674088534,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Sum of Scores of Built Strings",
        "titleSlug": "sum-of-scores-of-built-strings",
        "difficulty": "Hard"
      },
      {
        "title": "Maximum Deletions on a String",
        "titleSlug": "maximum-deletions-on-a-string",
        "difficulty": "Hard"
      },
      {
        "title": "Minimum Time to Revert Word to Initial State II",
        "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
        "difficulty": "Hard"
      },
      {
        "title": "Minimum Time to Revert Word to Initial State I",
        "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
        "difficulty": "Medium"
      }
    ]
  },
  {
    "questionFrontendId": "1554",
    "title": "Strings Differ by One Character",
    "titleSlug": "strings-differ-by-one-character",
    "difficulty": "Medium",
    "acRate": 40.83067677430179,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Count Words Obtained After Adding a Letter",
        "titleSlug": "count-words-obtained-after-adding-a-letter",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Airbnb",
        "frequency": 70.4
      },
      {
        "name": "Okta",
        "frequency": 87.9
      }
    ]
  },
  {
    "questionFrontendId": "1960",
    "title": "Maximum Product of the Length of Two Palindromic Substrings",
    "titleSlug": "maximum-product-of-the-length-of-two-palindromic-substrings",
    "difficulty": "Hard",
    "acRate": 30.48295077617089,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Maximum Product of the Length of Two Palindromic Subsequences",
        "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
        "difficulty": "Medium"
      },
      {
        "title": "Minimum Cost to Make Array Equal",
        "titleSlug": "minimum-cost-to-make-array-equal",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "2156",
    "title": "Find Substring With Given Hash Value",
    "titleSlug": "find-substring-with-given-hash-value",
    "difficulty": "Hard",
    "acRate": 25.16853202514579,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Distinct Echo Substrings",
        "titleSlug": "distinct-echo-substrings",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "2168",
    "title": "Unique Substrings With Equal Digit Frequency",
    "titleSlug": "unique-substrings-with-equal-digit-frequency",
    "difficulty": "Medium",
    "acRate": 64.2498106451835,
    "topicTags": [
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "Counting",
        "slug": "counting"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Number of Equal Count Substrings",
        "titleSlug": "number-of-equal-count-substrings",
        "difficulty": "Medium"
      },
      {
        "title": "Substrings That Begin and End With the Same Letter",
        "titleSlug": "substrings-that-begin-and-end-with-the-same-letter",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Expedia",
        "frequency": 95.2
      }
    ]
  },
  {
    "questionFrontendId": "2430",
    "title": "Maximum Deletions on a String",
    "titleSlug": "maximum-deletions-on-a-string",
    "difficulty": "Hard",
    "acRate": 34.92354081412879,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Shortest Palindrome",
        "titleSlug": "shortest-palindrome",
        "difficulty": "Hard"
      },
      {
        "title": "Longest Happy Prefix",
        "titleSlug": "longest-happy-prefix",
        "difficulty": "Hard"
      },
      {
        "title": "Remove All Occurrences of a Substring",
        "titleSlug": "remove-all-occurrences-of-a-substring",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "DE Shaw",
        "frequency": 77.4
      }
    ]
  },
  {
    "questionFrontendId": "3006",
    "title": "Find Beautiful Indices in the Given Array I",
    "titleSlug": "find-beautiful-indices-in-the-given-array-i",
    "difficulty": "Medium",
    "acRate": 39.11389435678807,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [],
    "companies": [
      {
        "name": "Palantir Technologies",
        "frequency": 100.0
      },
      {
        "name": "Samsara",
        "frequency": 85.1
      }
    ]
  },
  {
    "questionFrontendId": "3008",
    "title": "Find Beautiful Indices in the Given Array II",
    "titleSlug": "find-beautiful-indices-in-the-given-array-ii",
    "difficulty": "Hard",
    "acRate": 26.8355091383812,
    "topicTags": [
      {
        "name": "Two Pointers",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [],
    "companies": [
      {
        "name": "Palantir Technologies",
        "frequency": 92.0
      },
      {
        "name": "PhonePe",
        "frequency": 84.3
      }
    ]
  },
  {
    "questionFrontendId": "3023",
    "title": "Find Pattern in Infinite Stream I",
    "titleSlug": "find-pattern-in-infinite-stream-i",
    "difficulty": "Medium",
    "acRate": 57.077944774554354,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": []
  },
  {
    "questionFrontendId": "3029",
    "title": "Minimum Time to Revert Word to Initial State I",
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
    "difficulty": "Medium",
    "acRate": 41.63131118335262,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Longest Happy Prefix",
        "titleSlug": "longest-happy-prefix",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Sprinklr",
        "frequency": 90.0
      }
    ]
  },
  {
    "questionFrontendId": "3031",
    "title": "Minimum Time to Revert Word to Initial State II",
    "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
    "difficulty": "Hard",
    "acRate": 34.52410147415461,
    "topicTags": [
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Longest Happy Prefix",
        "titleSlug": "longest-happy-prefix",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Sprinklr",
        "frequency": 90.0
      }
    ]
  },
  {
    "questionFrontendId": "3034",
    "title": "Number of Subarrays That Match a Pattern I",
    "titleSlug": "number-of-subarrays-that-match-a-pattern-i",
    "difficulty": "Medium",
    "acRate": 67.38857764027092,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Count the Number of Incremovable Subarrays I",
        "titleSlug": "count-the-number-of-incremovable-subarrays-i",
        "difficulty": "Easy"
      }
    ],
    "companies": [
      {
        "name": "Autodesk",
        "frequency": 100.0
      },
      {
        "name": "Capital One",
        "frequency": 54.8
      },
      {
        "name": "Visa",
        "frequency": 42.9
      }
    ]
  },
  {
    "questionFrontendId": "3036",
    "title": "Number of Subarrays That Match a Pattern II",
    "titleSlug": "number-of-subarrays-that-match-a-pattern-ii",
    "difficulty": "Hard",
    "acRate": 32.552518129033864,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Match Substring After Replacement",
        "titleSlug": "match-substring-after-replacement",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Autodesk",
        "frequency": 95.5
      },
      {
        "name": "ThoughtWorks",
        "frequency": 100.0
      }
    ]
  },
  {
    "questionFrontendId": "3037",
    "title": "Find Pattern in Infinite Stream II",
    "titleSlug": "find-pattern-in-infinite-stream-ii",
    "difficulty": "Hard",
    "acRate": 68.33700440528634,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Sliding Window",
        "slug": "sliding-window"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Number of Integers With Popcount-Depth Equal to K I",
        "titleSlug": "number-of-integers-with-popcount-depth-equal-to-k-i",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "3042",
    "title": "Count Prefix and Suffix Pairs I",
    "titleSlug": "count-prefix-and-suffix-pairs-i",
    "difficulty": "Easy",
    "acRate": 77.70777408536817,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Implement Trie (Prefix Tree)",
        "titleSlug": "implement-trie-prefix-tree",
        "difficulty": "Medium"
      },
      {
        "title": "Design Add and Search Words Data Structure",
        "titleSlug": "design-add-and-search-words-data-structure",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Autodesk",
        "frequency": 95.5
      },
      {
        "name": "Capital One",
        "frequency": 40.8
      }
    ]
  },
  {
    "questionFrontendId": "3045",
    "title": "Count Prefix and Suffix Pairs II",
    "titleSlug": "count-prefix-and-suffix-pairs-ii",
    "difficulty": "Hard",
    "acRate": 27.4541292871119,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Implement Trie (Prefix Tree)",
        "titleSlug": "implement-trie-prefix-tree",
        "difficulty": "Medium"
      },
      {
        "title": "Design Add and Search Words Data Structure",
        "titleSlug": "design-add-and-search-words-data-structure",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Autodesk",
        "frequency": 95.5
      },
      {
        "name": "Capital One",
        "frequency": 59.3
      },
      {
        "name": "Samsung",
        "frequency": 83.2
      }
    ]
  },
  {
    "questionFrontendId": "3291",
    "title": "Minimum Number of Valid Strings to Form Target I",
    "titleSlug": "minimum-number-of-valid-strings-to-form-target-i",
    "difficulty": "Medium",
    "acRate": 20.43259885863565,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Trie",
        "slug": "trie"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Minimum Cost to Convert String II",
        "titleSlug": "minimum-cost-to-convert-string-ii",
        "difficulty": "Hard"
      },
      {
        "title": "Construct String with Minimum Cost",
        "titleSlug": "construct-string-with-minimum-cost",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "3292",
    "title": "Minimum Number of Valid Strings to Form Target II",
    "titleSlug": "minimum-number-of-valid-strings-to-form-target-ii",
    "difficulty": "Hard",
    "acRate": 18.46521825792306,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Segment Tree",
        "slug": "segment-tree"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": [
      {
        "title": "Minimum Cost to Convert String II",
        "titleSlug": "minimum-cost-to-convert-string-ii",
        "difficulty": "Hard"
      },
      {
        "title": "Construct String with Minimum Cost",
        "titleSlug": "construct-string-with-minimum-cost",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "3529",
    "title": "Count Cells in Overlapping Horizontal and Vertical Substrings",
    "titleSlug": "count-cells-in-overlapping-horizontal-and-vertical-substrings",
    "difficulty": "Medium",
    "acRate": 23.379762392462105,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Rolling Hash",
        "slug": "rolling-hash"
      },
      {
        "name": "String Matching",
        "slug": "string-matching"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      },
      {
        "name": "Hash Function",
        "slug": "hash-function"
      }
    ],
    "similarQuestions": []
  }
]