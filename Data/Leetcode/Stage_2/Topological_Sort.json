[
  {
    "questionFrontendId": "207",
    "title": "Course Schedule",
    "titleSlug": "course-schedule",
    "difficulty": "Medium",
    "acRate": 49.808407378655964,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      },
      {
        "title": "Graph Valid Tree",
        "titleSlug": "graph-valid-tree",
        "difficulty": "Medium"
      },
      {
        "title": "Minimum Height Trees",
        "titleSlug": "minimum-height-trees",
        "difficulty": "Medium"
      },
      {
        "title": "Course Schedule III",
        "titleSlug": "course-schedule-iii",
        "difficulty": "Hard"
      },
      {
        "title": "Build a Matrix With Conditions",
        "titleSlug": "build-a-matrix-with-conditions",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Anduril",
        "frequency": 85.6
      },
      {
        "name": "ByteDance",
        "frequency": 78.6
      },
      {
        "name": "Citadel",
        "frequency": 37.1
      },
      {
        "name": "Coupang",
        "frequency": 90.7
      },
      {
        "name": "CrowdStrike",
        "frequency": 67.5
      },
      {
        "name": "Cruise",
        "frequency": 65.3
      },
      {
        "name": "DoorDash",
        "frequency": 30.9
      },
      {
        "name": "eBay",
        "frequency": 70.8
      },
      {
        "name": "Flipkart",
        "frequency": 64.2
      },
      {
        "name": "Graviton",
        "frequency": 100.0
      },
      {
        "name": "Intuit",
        "frequency": 46.9
      },
      {
        "name": "IXL",
        "frequency": 52.3
      },
      {
        "name": "Karat",
        "frequency": 60.9
      },
      {
        "name": "LiveRamp",
        "frequency": 65.1
      },
      {
        "name": "Nordstrom",
        "frequency": 100.0
      },
      {
        "name": "Nutanix",
        "frequency": 54.7
      },
      {
        "name": "Nvidia",
        "frequency": 38.4
      },
      {
        "name": "Oracle",
        "frequency": 61.6
      },
      {
        "name": "PayPal",
        "frequency": 37.9
      },
      {
        "name": "Roblox",
        "frequency": 38.3
      },
      {
        "name": "Snap",
        "frequency": 52.3
      },
      {
        "name": "Snowflake",
        "frequency": 60.1
      },
      {
        "name": "Swiggy",
        "frequency": 67.9
      },
      {
        "name": "Visa",
        "frequency": 59.3
      },
      {
        "name": "VMware",
        "frequency": 70.9
      },
      {
        "name": "Walmart Labs",
        "frequency": 46.3
      },
      {
        "name": "Yelp",
        "frequency": 100.0
      },
      {
        "name": "Zenefits",
        "frequency": 97.6
      }
    ]
  },
  {
    "questionFrontendId": "210",
    "title": "Course Schedule II",
    "titleSlug": "course-schedule-ii",
    "difficulty": "Medium",
    "acRate": 53.975977162145185,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule",
        "titleSlug": "course-schedule",
        "difficulty": "Medium"
      },
      {
        "title": "Alien Dictionary",
        "titleSlug": "alien-dictionary",
        "difficulty": "Hard"
      },
      {
        "title": "Minimum Height Trees",
        "titleSlug": "minimum-height-trees",
        "difficulty": "Medium"
      },
      {
        "title": "Sequence Reconstruction",
        "titleSlug": "sequence-reconstruction",
        "difficulty": "Medium"
      },
      {
        "title": "Course Schedule III",
        "titleSlug": "course-schedule-iii",
        "difficulty": "Hard"
      },
      {
        "title": "Parallel Courses",
        "titleSlug": "parallel-courses",
        "difficulty": "Medium"
      },
      {
        "title": "Find All Possible Recipes from Given Supplies",
        "titleSlug": "find-all-possible-recipes-from-given-supplies",
        "difficulty": "Medium"
      },
      {
        "title": "Build a Matrix With Conditions",
        "titleSlug": "build-a-matrix-with-conditions",
        "difficulty": "Hard"
      },
      {
        "title": "Sort Array by Moving Items to Empty Space",
        "titleSlug": "sort-array-by-moving-items-to-empty-space",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Anduril",
        "frequency": 79.0
      },
      {
        "name": "Arista Networks",
        "frequency": 67.3
      },
      {
        "name": "ByteDance",
        "frequency": 48.5
      },
      {
        "name": "Citadel",
        "frequency": 37.1
      },
      {
        "name": "Databricks",
        "frequency": 37.2
      },
      {
        "name": "DoorDash",
        "frequency": 55.0
      },
      {
        "name": "eBay",
        "frequency": 70.8
      },
      {
        "name": "Intuit",
        "frequency": 93.3
      },
      {
        "name": "Karat",
        "frequency": 47.6
      },
      {
        "name": "Netflix",
        "frequency": 57.2
      },
      {
        "name": "Nvidia",
        "frequency": 47.7
      },
      {
        "name": "Oracle",
        "frequency": 59.6
      },
      {
        "name": "PhonePe",
        "frequency": 45.1
      },
      {
        "name": "Qualcomm",
        "frequency": 56.6
      },
      {
        "name": "Remitly",
        "frequency": 62.5
      },
      {
        "name": "Salesforce",
        "frequency": 70.8
      },
      {
        "name": "Snap",
        "frequency": 89.1
      },
      {
        "name": "Snowflake",
        "frequency": 91.6
      },
      {
        "name": "Tesla",
        "frequency": 54.1
      },
      {
        "name": "VMware",
        "frequency": 61.1
      },
      {
        "name": "Walmart Labs",
        "frequency": 53.1
      },
      {
        "name": "Workday",
        "frequency": 88.0
      },
      {
        "name": "Zenefits",
        "frequency": 97.6
      }
    ]
  },
  {
    "questionFrontendId": "269",
    "title": "Alien Dictionary",
    "titleSlug": "alien-dictionary",
    "difficulty": "Hard",
    "acRate": 36.79578941933485,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Airbnb",
        "frequency": 80.4
      },
      {
        "name": "Citadel",
        "frequency": 45.9
      },
      {
        "name": "NetApp",
        "frequency": 87.3
      },
      {
        "name": "PhonePe",
        "frequency": 45.1
      },
      {
        "name": "Pocket Gems",
        "frequency": 100.0
      },
      {
        "name": "Rippling",
        "frequency": 55.1
      },
      {
        "name": "Snap",
        "frequency": 84.9
      },
      {
        "name": "Tencent",
        "frequency": 62.4
      },
      {
        "name": "Wix",
        "frequency": 86.7
      },
      {
        "name": "X",
        "frequency": 89.4
      }
    ]
  },
  {
    "questionFrontendId": "310",
    "title": "Minimum Height Trees",
    "titleSlug": "minimum-height-trees",
    "difficulty": "Medium",
    "acRate": 42.12588514910479,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule",
        "titleSlug": "course-schedule",
        "difficulty": "Medium"
      },
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      },
      {
        "title": "Collect Coins in a Tree",
        "titleSlug": "collect-coins-in-a-tree",
        "difficulty": "Hard"
      },
      {
        "title": "Count Pairs of Connectable Servers in a Weighted Tree Network",
        "titleSlug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
        "difficulty": "Medium"
      },
      {
        "title": "Find Minimum Diameter After Merging Two Trees",
        "titleSlug": "find-minimum-diameter-after-merging-two-trees",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Citadel",
        "frequency": 45.9
      },
      {
        "name": "PhonePe",
        "frequency": 45.1
      },
      {
        "name": "Splunk",
        "frequency": 79.4
      },
      {
        "name": "Stackline",
        "frequency": 100.0
      }
    ]
  },
  {
    "questionFrontendId": "444",
    "title": "Sequence Reconstruction",
    "titleSlug": "sequence-reconstruction",
    "difficulty": "Medium",
    "acRate": 29.711962507095418,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      }
    ]
  },
  {
    "questionFrontendId": "802",
    "title": "Find Eventual Safe States",
    "titleSlug": "find-eventual-safe-states",
    "difficulty": "Medium",
    "acRate": 69.37345737078418,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Build a Matrix With Conditions",
        "titleSlug": "build-a-matrix-with-conditions",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "851",
    "title": "Loud and Rich",
    "titleSlug": "loud-and-rich",
    "difficulty": "Medium",
    "acRate": 62.2225702729844,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Build a Matrix With Conditions",
        "titleSlug": "build-a-matrix-with-conditions",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "PayPal",
        "frequency": 58.0
      }
    ]
  },
  {
    "questionFrontendId": "1059",
    "title": "All Paths from Source Lead to Destination",
    "titleSlug": "all-paths-from-source-lead-to-destination",
    "difficulty": "Medium",
    "acRate": 37.07056374351379,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": []
  },
  {
    "questionFrontendId": "1136",
    "title": "Parallel Courses",
    "titleSlug": "parallel-courses",
    "difficulty": "Medium",
    "acRate": 61.89069693795523,
    "topicTags": [
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      },
      {
        "title": "Parallel Courses II",
        "titleSlug": "parallel-courses-ii",
        "difficulty": "Hard"
      },
      {
        "title": "Parallel Courses III",
        "titleSlug": "parallel-courses-iii",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Snowflake",
        "frequency": 39.6
      }
    ]
  },
  {
    "questionFrontendId": "1203",
    "title": "Sort Items by Groups Respecting Dependencies",
    "titleSlug": "sort-items-by-groups-respecting-dependencies",
    "difficulty": "Hard",
    "acRate": 65.64604956576996,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [],
    "companies": [
      {
        "name": "Citadel",
        "frequency": 45.9
      }
    ]
  },
  {
    "questionFrontendId": "1245",
    "title": "Tree Diameter",
    "titleSlug": "tree-diameter",
    "difficulty": "Medium",
    "acRate": 61.14606513119995,
    "topicTags": [
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Count Subtrees With Max Distance Between Cities",
        "titleSlug": "count-subtrees-with-max-distance-between-cities",
        "difficulty": "Hard"
      },
      {
        "title": "Find Minimum Diameter After Merging Two Trees",
        "titleSlug": "find-minimum-diameter-after-merging-two-trees",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "1462",
    "title": "Course Schedule IV",
    "titleSlug": "course-schedule-iv",
    "difficulty": "Medium",
    "acRate": 59.597532164043045,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": []
  },
  {
    "questionFrontendId": "1591",
    "title": "Strange Printer II",
    "titleSlug": "strange-printer-ii",
    "difficulty": "Hard",
    "acRate": 60.28569089718402,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "similarQuestions": [
      {
        "title": "Strange Printer",
        "titleSlug": "strange-printer",
        "difficulty": "Hard"
      },
      {
        "title": "Longest Cycle in a Graph",
        "titleSlug": "longest-cycle-in-a-graph",
        "difficulty": "Hard"
      },
      {
        "title": "Sort Array by Moving Items to Empty Space",
        "titleSlug": "sort-array-by-moving-items-to-empty-space",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "1632",
    "title": "Rank Transform of a Matrix",
    "titleSlug": "rank-transform-of-a-matrix",
    "difficulty": "Hard",
    "acRate": 41.59827773191538,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "similarQuestions": [
      {
        "title": "Rank Transform of an Array",
        "titleSlug": "rank-transform-of-an-array",
        "difficulty": "Easy"
      },
      {
        "title": "GCD Sort of an Array",
        "titleSlug": "gcd-sort-of-an-array",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Citadel",
        "frequency": 37.1
      }
    ]
  },
  {
    "questionFrontendId": "2050",
    "title": "Parallel Courses III",
    "titleSlug": "parallel-courses-iii",
    "difficulty": "Hard",
    "acRate": 66.778657441288,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "slug": "dynamic-programming"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule III",
        "titleSlug": "course-schedule-iii",
        "difficulty": "Hard"
      },
      {
        "title": "Parallel Courses",
        "titleSlug": "parallel-courses",
        "difficulty": "Medium"
      },
      {
        "title": "Single-Threaded CPU",
        "titleSlug": "single-threaded-cpu",
        "difficulty": "Medium"
      },
      {
        "title": "Process Tasks Using Servers",
        "titleSlug": "process-tasks-using-servers",
        "difficulty": "Medium"
      },
      {
        "title": "Maximum Employees to Be Invited to a Meeting",
        "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Acko",
        "frequency": 89.3
      },
      {
        "name": "Citadel",
        "frequency": 61.1
      },
      {
        "name": "Snap",
        "frequency": 59.5
      },
      {
        "name": "Snowflake",
        "frequency": 78.0
      },
      {
        "name": "Stripe",
        "frequency": 44.6
      },
      {
        "name": "TikTok",
        "frequency": 47.6
      },
      {
        "name": "Two Sigma",
        "frequency": 72.1
      }
    ]
  },
  {
    "questionFrontendId": "2115",
    "title": "Find All Possible Recipes from Given Supplies",
    "titleSlug": "find-all-possible-recipes-from-given-supplies",
    "difficulty": "Medium",
    "acRate": 56.472210518251806,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      },
      {
        "title": "Count Good Meals",
        "titleSlug": "count-good-meals",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "PhonePe",
        "frequency": 45.1
      },
      {
        "name": "TikTok",
        "frequency": 47.6
      },
      {
        "name": "Verily",
        "frequency": 92.3
      }
    ]
  },
  {
    "questionFrontendId": "2127",
    "title": "Maximum Employees to Be Invited to a Meeting",
    "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
    "difficulty": "Hard",
    "acRate": 61.988198891847155,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Redundant Connection",
        "titleSlug": "redundant-connection",
        "difficulty": "Medium"
      },
      {
        "title": "Parallel Courses III",
        "titleSlug": "parallel-courses-iii",
        "difficulty": "Hard"
      },
      {
        "title": "Process Restricted Friend Requests",
        "titleSlug": "process-restricted-friend-requests",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Barclays",
        "frequency": 71.0
      },
      {
        "name": "SAP",
        "frequency": 52.9
      }
    ]
  },
  {
    "questionFrontendId": "2192",
    "title": "All Ancestors of a Node in a Directed Acyclic Graph",
    "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
    "difficulty": "Medium",
    "acRate": 61.96980943280938,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Number of Restricted Paths From First to Last Node",
        "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Palantir Technologies",
        "frequency": 45.4
      }
    ]
  },
  {
    "questionFrontendId": "2246",
    "title": "Longest Path With Different Adjacent Characters",
    "titleSlug": "longest-path-with-different-adjacent-characters",
    "difficulty": "Hard",
    "acRate": 53.85984122638927,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Diameter of Binary Tree",
        "titleSlug": "diameter-of-binary-tree",
        "difficulty": "Easy"
      },
      {
        "title": "Longest Univalue Path",
        "titleSlug": "longest-univalue-path",
        "difficulty": "Medium"
      },
      {
        "title": "Choose Edges to Maximize Score in a Tree",
        "titleSlug": "choose-edges-to-maximize-score-in-a-tree",
        "difficulty": "Medium"
      }
    ],
    "companies": [
      {
        "name": "Hudson River Trading",
        "frequency": 97.8
      },
      {
        "name": "Target",
        "frequency": 100.0
      }
    ]
  },
  {
    "questionFrontendId": "2360",
    "title": "Longest Cycle in a Graph",
    "titleSlug": "longest-cycle-in-a-graph",
    "difficulty": "Hard",
    "acRate": 50.012618296529965,
    "topicTags": [
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Strange Printer II",
        "titleSlug": "strange-printer-ii",
        "difficulty": "Hard"
      },
      {
        "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
        "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
        "difficulty": "Medium"
      },
      {
        "title": "Shortest Cycle in a Graph",
        "titleSlug": "shortest-cycle-in-a-graph",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Juspay",
        "frequency": 100.0
      }
    ]
  },
  {
    "questionFrontendId": "2371",
    "title": "Minimize Maximum Value in a Grid",
    "titleSlug": "minimize-maximum-value-in-a-grid",
    "difficulty": "Hard",
    "acRate": 70.69721115537848,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Sorting",
        "slug": "sorting"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "similarQuestions": [
      {
        "title": "Candy",
        "titleSlug": "candy",
        "difficulty": "Hard"
      }
    ]
  },
  {
    "questionFrontendId": "2392",
    "title": "Build a Matrix With Conditions",
    "titleSlug": "build-a-matrix-with-conditions",
    "difficulty": "Hard",
    "acRate": 79.23680991278955,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "slug": "matrix"
      }
    ],
    "similarQuestions": [
      {
        "title": "Course Schedule",
        "titleSlug": "course-schedule",
        "difficulty": "Medium"
      },
      {
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "difficulty": "Medium"
      },
      {
        "title": "Find Eventual Safe States",
        "titleSlug": "find-eventual-safe-states",
        "difficulty": "Medium"
      },
      {
        "title": "Loud and Rich",
        "titleSlug": "loud-and-rich",
        "difficulty": "Medium"
      }
    ]
  },
  {
    "questionFrontendId": "2603",
    "title": "Collect Coins in a Tree",
    "titleSlug": "collect-coins-in-a-tree",
    "difficulty": "Hard",
    "acRate": 37.99890816450321,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Tree",
        "slug": "tree"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Minimum Height Trees",
        "titleSlug": "minimum-height-trees",
        "difficulty": "Medium"
      },
      {
        "title": "Sum of Distances in Tree",
        "titleSlug": "sum-of-distances-in-tree",
        "difficulty": "Hard"
      },
      {
        "title": "Maximum Score After Applying Operations on a Tree",
        "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
        "difficulty": "Medium"
      },
      {
        "title": "Find Number of Coins to Place in Tree Nodes",
        "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "Graviton",
        "frequency": 89.5
      },
      {
        "name": "Lucid",
        "frequency": 100.0
      }
    ]
  },
  {
    "questionFrontendId": "3383",
    "title": "Minimum Runes to Add to Cast Spell",
    "titleSlug": "minimum-runes-to-add-to-cast-spell",
    "difficulty": "Hard",
    "acRate": 42.592592592592595,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Minimum Number of Days to Disconnect Island",
        "titleSlug": "minimum-number-of-days-to-disconnect-island",
        "difficulty": "Hard"
      },
      {
        "title": "Minimum Edge Weight Equilibrium Queries in a Tree",
        "titleSlug": "minimum-edge-weight-equilibrium-queries-in-a-tree",
        "difficulty": "Hard"
      }
    ],
    "companies": [
      {
        "name": "DE Shaw",
        "frequency": 77.4
      }
    ]
  },
  {
    "questionFrontendId": "3481",
    "title": "Apply Substitutions",
    "titleSlug": "apply-substitutions",
    "difficulty": "Medium",
    "acRate": 77.59847036328871,
    "topicTags": [
      {
        "name": "Array",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "slug": "string"
      },
      {
        "name": "Depth-First Search",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "slug": "breadth-first-search"
      },
      {
        "name": "Graph",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "slug": "topological-sort"
      }
    ],
    "similarQuestions": [
      {
        "title": "Evaluate the Bracket Pairs of a String",
        "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
        "difficulty": "Medium"
      }
    ]
  }
]